//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SondaCorreo.WS_Resources {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ResourcesSoap", Namespace="http://tempuri.org/")]
    public partial class Resources : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertMail_AgostoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Resources() {
            this.Url = global::SondaCorreo.Properties.Settings.Default.SondaCorreo_WS_Resources_Resources;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertMail_AgostoCompletedEventHandler InsertMail_AgostoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMail_Agosto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertMail_Agosto(string Nombre, string Correo, string Telefono1, string Telefono2, string Origen, string Fuente, string Medio, string Oferta, string Camp) {
            object[] results = this.Invoke("InsertMail_Agosto", new object[] {
                        Nombre,
                        Correo,
                        Telefono1,
                        Telefono2,
                        Origen,
                        Fuente,
                        Medio,
                        Oferta,
                        Camp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMail_AgostoAsync(string Nombre, string Correo, string Telefono1, string Telefono2, string Origen, string Fuente, string Medio, string Oferta, string Camp) {
            this.InsertMail_AgostoAsync(Nombre, Correo, Telefono1, Telefono2, Origen, Fuente, Medio, Oferta, Camp, null);
        }
        
        /// <remarks/>
        public void InsertMail_AgostoAsync(string Nombre, string Correo, string Telefono1, string Telefono2, string Origen, string Fuente, string Medio, string Oferta, string Camp, object userState) {
            if ((this.InsertMail_AgostoOperationCompleted == null)) {
                this.InsertMail_AgostoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMail_AgostoOperationCompleted);
            }
            this.InvokeAsync("InsertMail_Agosto", new object[] {
                        Nombre,
                        Correo,
                        Telefono1,
                        Telefono2,
                        Origen,
                        Fuente,
                        Medio,
                        Oferta,
                        Camp}, this.InsertMail_AgostoOperationCompleted, userState);
        }
        
        private void OnInsertMail_AgostoOperationCompleted(object arg) {
            if ((this.InsertMail_AgostoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMail_AgostoCompleted(this, new InsertMail_AgostoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertMail_AgostoCompletedEventHandler(object sender, InsertMail_AgostoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMail_AgostoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMail_AgostoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591